# Generated by Django 4.2.11 on 2024-10-19 07:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Телеграм ID')),
                ('telegram_username', models.CharField(blank=True, max_length=255, null=True, verbose_name='телеграм Username')),
                ('first_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Имя пользователь телеграм')),
                ('is_bot', models.BooleanField(default=False, verbose_name='Бот?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='GiveAway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.BigIntegerField(verbose_name='ID канала')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.CharField(max_length=254, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/%Y/%m/', verbose_name='Изображение')),
                ('create_date', models.DateField(verbose_name='Дата создания')),
                ('end_datetime', models.DateTimeField(verbose_name='Время завершения розыгрыша')),
                ('winners_count', models.IntegerField(verbose_name='Количество призовых мест')),
                ('is_referral_system', models.BooleanField(default=False, verbose_name='Реферальная система')),
                ('referral_invites_count', models.IntegerField(blank=True, null=True, verbose_name='Количество приглашений')),
                ('status', models.CharField(choices=[('created', 'Создан'), ('in_progress', 'В процессе'), ('end', 'Закончен')], default='created', max_length=20, verbose_name='Статус')),
                ('terms_of_participation', models.JSONField(default={'bet': {'required': False, 'starting_period': '2024-01-01', 'sum': 0}, 'confirm_email_required': False, 'confirm_phone_required': False, 'deposit': {'required': False, 'starting_period': '2024-01-01', 'sum': 0}}, verbose_name='Условия для участия')),
            ],
            options={
                'verbose_name': 'Розыгрыш',
                'verbose_name_plural': 'Розыгрыши',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(verbose_name='Дата создания')),
                ('number_ticket', models.IntegerField(verbose_name='Номер тикета')),
                ('giveaway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.giveaway', verbose_name='Розыгрыш')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
            },
        ),
    ]
